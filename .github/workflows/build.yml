name: Build

on:
  pull_request:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rust-src
          rust-version: nightly
          targets: wasm32-unknown-unknown

      - name: Build
        env:
          RUSTFLAGS: -Z virtual-function-elimination -C lto -C target-feature=+bulk-memory,+mutable-globals,+nontrapping-fptoint,+sign-ext,+simd128,+multivalue
        run: |
          cargo +nightly build --locked --release --features nightly -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort

      - name: Download binaryen
        if: github.ref == 'refs/heads/master'
        uses: robinraju/release-downloader@v1.7
        with:
          repository: "WebAssembly/binaryen"
          latest: true
          fileName: "binaryen-*-x86_64-linux.tar.gz"
          out-file-path: "/home/runner/.cargo/bin"

      - name: Install binaryen
        if: github.ref == 'refs/heads/master'
        run: |
          cd ~/.cargo/bin
          tar -xzf binaryen-*-x86_64-linux.tar.gz
          mv binaryen*/bin/wasm* .

      - name: Optimize
        if: github.ref == 'refs/heads/master'
        run: |
          WASM_FILE=target/wasm32-unknown-unknown/release/lunistice_auto_splitter.wasm
          wasm-opt -all -O4 "$WASM_FILE" -o "$WASM_FILE"

      - name: Release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: target/wasm32-unknown-unknown/release/lunistice_auto_splitter.wasm
          name: Latest
          tag_name: latest
          body: This contains the latest version of the auto splitter.

  clippy:
    name: Check clippy lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
          targets: wasm32-unknown-unknown

      - name: Run Clippy
        run: cargo clippy

  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt -- --check || true
